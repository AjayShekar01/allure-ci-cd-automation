# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      ## Generate the Allure test results
      # - name: Build the docker image
      #   run: docker-compose up --build -d

      # - name: Build with Maven
      #   run: mvn clean test -DsuiteXmlFile="./testng.xml"

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: '390.0.0'
          service_account_email: ${{ secrets.SA_EMAIL }}
          service_account_key: ${{ secrets.SA_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      - name: Build
        run: |
          docker-compose -f docker/docker-compose.registry-build.yml build 
          TAG=dev docker-compose -f docker/docker-compose.registry-build.yml build

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker-compose -f docker/docker-compose.registry-build.yml push
          TAG=dev docker-compose -f docker/docker-compose.registry-build.yml push          
      
    
